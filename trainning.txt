練習用ファイル　その2です

今日は何がしたいですか？


自習は入れるつもりで

チョコミントのアイスが食べたい(^_-)-☆☆

お腹すいたー( ﾟДﾟ)

雨最悪～！！
傘がない！

abcd
(^ω^)三(^ω^)
(^ω^)三(^ω^)(^ω^)三(^ω^)


勝手に編集


文字を追加


abc


プルリク練習中

aaa

なにこれ


package jp.ken.session.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.SessionAttributes;

import jp.ken.session.model.LoginModel;

//@Controllerがついたクラスはサーバー起動時にインスタンス化され、DIコンテナに格納される
//DIコンテナに格納された後は、リクエストが来るたびに同じインスタンスを使いまわす

//@SessionAttributesでユーザー毎のセッション管理を行う
//登録したオブジェクト(オブジェクト名で登録)は同一コントローラー内であれば共有される
@Controller
@RequestMapping("login")
@SessionAttributes("loginModel")
public class LoginController {


//このLoginContorollerがインスタンス化する前にloginModel(オブジェクト名)とういう名前で
//LoginModel型のインスタンスを生成してセッションに登録する
//すでにこのloginModelという名前のオブジェクトが存在するなら、それを使い回す
	@ModelAttribute("loginModel")
	public LoginModel setupLoginForm() {
		return new LoginModel();
	}

	@RequestMapping(method = RequestMethod.GET)
	public String toLogin() {
		return "loginForm";
	}

	@RequestMapping(method = RequestMethod.POST)
	public String toRegist(@Validated @ModelAttribute LoginModel lModel, BindingResult result, Model model) {
		if(result.hasErrors()) {
			return "loginForm";
		}else if(lModel.getLoginId().equals("duke") && lModel.getPassword().equals("dolphin7")) {
			return "redirect:/regist";
		}else {
			//エラーメッセージを登録して、再度loginForm.jspに遷移
			//Modelオブジェクトにはviewで使う部品を登録する
			//今回、Bindingオブジェクトのインスタンスは登録していない(セッションに登録しているから)
			model.addAttribute("errorMessage", "ログインIDもしくはパスワードが間違っています。");
			return "loginForm";

		}

	}

}
bbbbb




